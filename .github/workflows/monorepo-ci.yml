name: Monorepo CI

on:
  push:
    branches: [ "main" ]
  pull_request:

# Actívalo por repo/PR:
# - STRICT_LINT: "true" para que falle si hay formateo/estilo
# - BUILD_DOCKER: "true" para construir las imágenes por carpeta
env:
  STRICT_LINT: "false"
  BUILD_DOCKER: "false"

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          - retail-assortment-agent-langgraph
          - retail-pricing-simulator-langchain
          - retail-catalog-normalizer-crewai
          - retail-replenishment-planner-langgraph
          - retail-product-matching-rag-langchain
          - retail-customer-inquiry-triage-fastapi
          - retail-a11y-review-bot
          - merch-vendor-scorecard-langgraph
          - merch-planogram-helper-langchain
          - merch-promo-optimizer-crewai
          - merch-returns-analyzer-vanilla
          - merch-forecast-comparator-langchain
          - merch-content-enrichment-crewai
          - merch-shelf-gap-detector-langgraph
          - pm-okr-advisor-langchain
          - pm-prd-writer-crewai
          - pm-experiment-copilot-vanilla
          - pm-backlog-prioritizer-langgraph
          - pm-stakeholder-qa-langchain
          - pm-risk-register-vanilla

    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.project }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate project structure
        run: |
          test -f requirements.txt
          test -f app/main.py
          test -d tests

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            ${{ matrix.project }}/requirements.txt

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pytest

      - name: Smoke import (FastAPI app)
        run: |
          python - << 'PY'
          import importlib.util, os
          spec = importlib.util.spec_from_file_location("app.main","app/main.py")
          m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m)
          assert hasattr(m,"app"), "FastAPI 'app' not found in app/main.py"
          print("Import OK")
          PY

      - name: Run tests
        run: pytest -q

      - name: Lint (Ruff + Black) [non-blocking by default]
        if: env.STRICT_LINT == 'true'
        run: |
          pip install ruff black
          ruff check .
          black --check .

      - name: Docker build (optional)
        if: env.BUILD_DOCKER == 'true' && hashFiles(format('{0}/Dockerfile', matrix.project)) != ''
        run: |
          docker build -t ${{ github.repository }}:${{ matrix.project }}-ci .
